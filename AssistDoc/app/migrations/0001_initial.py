# Generated by Django 5.2.4 on 2025-07-19 22:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_date', models.DateTimeField(auto_now_add=True)),
                ('consultation_reason', models.TextField()),
                ('clinical_exam', models.TextField(blank=True, null=True)),
                ('initial_diagnosis', models.TextField(blank=True, null=True)),
                ('tension', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('heart_rate', models.PositiveIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('oxygen_saturation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('hospital_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Hospital',
                'verbose_name_plural': 'Hospitals',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_security_number', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=10)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('diseases', models.TextField(blank=True, null=True)),
                ('surgeries', models.TextField(blank=True, null=True)),
                ('vaccines', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('actual_medecines', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Symptom',
                'verbose_name_plural': 'Symptoms',
            },
        ),
        migrations.CreateModel(
            name='Diagnostic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_diagnostic', models.DateTimeField(auto_now_add=True)),
                ('code_cim', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField()),
                ('statut', models.CharField(choices=[('provisoire', 'Provisoire'), ('definitif', 'Définitif'), ('refute', 'Réfuté')], default='provisoire', max_length=20)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diagnostics_associes', to='app.consultation')),
                ('hopital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostics_hopital', to='app.hospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostics', to='app.patient')),
            ],
            options={
                'verbose_name': 'Diagnostic',
                'verbose_name_plural': 'Diagnostics',
                'ordering': ['-date_diagnostic'],
            },
        ),
        migrations.AddField(
            model_name='consultation',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations_hospital', to='app.hospital'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='app.patient'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='symptoms',
            field=models.ManyToManyField(blank=True, related_name='consultations', to='app.symptom'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('doctor', 'Doctor'), ('hospital_admin', 'Hospital Admin'), ('super_admin', 'App Super Administrator')], default='doctor', max_length=20)),
                ('professional_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('speciality', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissionsgranted to each of their groups.', related_name='custom_user_groups', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('hospitals', models.ManyToManyField(related_name='doctors', to='app.hospital')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prescription', models.DateTimeField(auto_now_add=True)),
                ('medicament', models.CharField(max_length=255)),
                ('dosage', models.CharField(max_length=100)),
                ('frequence', models.CharField(max_length=100)),
                ('duree', models.CharField(max_length=100)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescriptions_associees', to='app.consultation')),
                ('diagnostic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescriptions_associees', to='app.diagnostic')),
                ('hopital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_hopital', to='app.hospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='app.patient')),
                ('medecin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescriptions_faites', to='app.user')),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
                'ordering': ['-date_prescription'],
            },
        ),
        migrations.CreateModel(
            name='ImagerieMedicale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_examen', models.DateTimeField(auto_now_add=True)),
                ('type_imagerie', models.CharField(choices=[('radio', 'Radiographie'), ('irm', 'IRM'), ('scanner', 'Scanner'), ('echo', 'Échographie')], max_length=100)),
                ('rapport_textuel', models.TextField(blank=True, null=True)),
                ('fichier_imagerie', models.FileField(blank=True, null=True, upload_to='medical_imaging/')),
                ('hopital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imageries_medicales_hopital', to='app.hospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imageries_medicales', to='app.patient')),
                ('medecin_prescripteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='imageries_prescrites', to='app.user')),
            ],
            options={
                'verbose_name': 'Imagerie Médicale',
                'verbose_name_plural': 'Imageries Médicales',
                'ordering': ['-date_examen'],
            },
        ),
        migrations.CreateModel(
            name='ExamenLaboratoire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_resultat', models.DateTimeField(blank=True, null=True)),
                ('type_examen', models.CharField(max_length=100)),
                ('resultats_textuels', models.TextField(blank=True, null=True)),
                ('fichier_resultats', models.FileField(blank=True, null=True, upload_to='lab_results/')),
                ('hopital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examens_laboratoire_hopital', to='app.hospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examens_laboratoire', to='app.patient')),
                ('medecin_prescripteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='examens_prescrits', to='app.user')),
            ],
            options={
                'verbose_name': 'Examen Laboratoire',
                'verbose_name_plural': 'Examens Laboratoire',
                'ordering': ['-date_resultat', '-date_demande'],
            },
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='medecin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diagnostics_poses', to='app.user'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_consultations', to='app.user'),
        ),
        migrations.CreateModel(
            name='AIRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('recommendation_type', models.CharField(choices=[('diagnostic_diff', 'Diagnostic Différentiel'), ('suggested_treatment_plan', 'Suggested Treatment Plan'), ('additional_exams', 'Additional Exams'), ('risk_prevention', 'Risk Prevention'), ('follow_up', 'Follow-up Recommendation'), ('info_medicale_pertinente', 'Information Médicale Pertinente')], max_length=50)),
                ('recommendation_content', models.TextField()),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text="Score de confiance de l'IA pour cette recommandation (0-100%)", max_digits=5, null=True)),
                ('recommendation_accepted', models.BooleanField(default=False)),
                ('doctor_comments', models.TextField(blank=True, null=True)),
                ('consultation_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_recos_from_consult', to='app.consultation')),
                ('diagnostic_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_recos_from_diag', to='app.diagnostic')),
                ('examen_labo_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_recos_from_lab', to='app.examenlaboratoire')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_recommendations', to='app.patient')),
                ('medecin_consultant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_ai_recommendations', to='app.user')),
            ],
            options={
                'verbose_name': 'Recommandation IA',
                'verbose_name_plural': 'Recommandations IA',
                'ordering': ['-generated_at'],
            },
        ),
    ]
