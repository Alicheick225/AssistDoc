# Generated by Django 5.2.4 on 2025-07-20 06:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0003_consultation_gemini_recommendations"),
    ]

    operations = [
        migrations.CreateModel(
            name="IAPerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_calcul", models.DateField(unique=True)),
                ("total_prescriptions", models.PositiveIntegerField(default=0)),
                (
                    "prescriptions_validees_directement",
                    models.PositiveIntegerField(default=0),
                ),
                ("prescriptions_modifiees", models.PositiveIntegerField(default=0)),
                ("prescriptions_rejetees", models.PositiveIntegerField(default=0)),
                (
                    "taux_validation_directe",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "taux_modification",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "taux_rejet",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "score_moyen_diagnostic",
                    models.DecimalField(decimal_places=1, default=0.0, max_digits=3),
                ),
                (
                    "score_moyen_prescription",
                    models.DecimalField(decimal_places=1, default=0.0, max_digits=3),
                ),
                (
                    "taux_efficacite_elevee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "duree_moyenne_guerison",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "satisfaction_moyenne_patients",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "satisfaction_moyenne_medecins",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Métriques Performance IA",
                "verbose_name_plural": "Métriques Performance IA",
                "ordering": ["-date_calcul"],
            },
        ),
        migrations.CreateModel(
            name="PrescriptionFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("validee_directement", "Validée directement"),
                            ("modifiee", "Modifiée avant validation"),
                            ("annulee", "Annulée/Rejetée"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "modifications_effectuees",
                    models.TextField(
                        blank=True,
                        help_text="Décrivez les modifications apportées à la prescription originale",
                        null=True,
                    ),
                ),
                (
                    "raison_modification",
                    models.TextField(
                        blank=True,
                        help_text="Pourquoi ces modifications étaient nécessaires",
                        null=True,
                    ),
                ),
                (
                    "efficacite_traitement",
                    models.CharField(
                        choices=[
                            ("tres_efficace", "Très efficace"),
                            ("efficace", "Efficace"),
                            ("moderement_efficace", "Modérément efficace"),
                            ("peu_efficace", "Peu efficace"),
                            ("inefficace", "Inefficace"),
                            ("non_evalue", "Non évalué"),
                        ],
                        default="non_evalue",
                        max_length=20,
                    ),
                ),
                (
                    "effets_secondaires_observes",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "duree_guerison",
                    models.PositiveIntegerField(
                        blank=True, help_text="Durée de guérison en jours", null=True
                    ),
                ),
                (
                    "satisfaction_patient",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Score de satisfaction de 1 à 10",
                        null=True,
                    ),
                ),
                ("commentaires_patient", models.TextField(blank=True, null=True)),
                (
                    "pertinence_diagnostic",
                    models.PositiveIntegerField(
                        default=5, help_text="Pertinence du diagnostic IA de 1 à 10"
                    ),
                ),
                (
                    "pertinence_prescription",
                    models.PositiveIntegerField(
                        default=5,
                        help_text="Pertinence de la prescription IA de 1 à 10",
                    ),
                ),
                ("commentaires_medecin", models.TextField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_mise_a_jour", models.DateTimeField(auto_now=True)),
                (
                    "suivi_complete",
                    models.BooleanField(
                        default=False,
                        help_text="Le suivi post-traitement est-il terminé",
                    ),
                ),
                (
                    "consultation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="app.consultation",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescription_feedbacks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback Prescription",
                "verbose_name_plural": "Feedbacks Prescriptions",
                "ordering": ["-date_creation"],
            },
        ),
        migrations.CreateModel(
            name="AILearningData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age_patient", models.PositiveIntegerField()),
                ("sexe_patient", models.CharField(max_length=10)),
                ("symptomes_principaux", models.TextField()),
                ("antecedents_medicaux", models.TextField()),
                ("signes_vitaux", models.JSONField()),
                ("prescription_ia_originale", models.JSONField()),
                ("diagnostic_ia_original", models.TextField()),
                ("prescription_finale_medecin", models.JSONField()),
                ("diagnostic_final_medecin", models.TextField()),
                (
                    "efficacite_traitement",
                    models.CharField(
                        choices=[
                            ("tres_efficace", "Très efficace"),
                            ("efficace", "Efficace"),
                            ("moderement_efficace", "Modérément efficace"),
                            ("peu_efficace", "Peu efficace"),
                            ("inefficace", "Inefficace"),
                            ("non_evalue", "Non évalué"),
                        ],
                        max_length=20,
                    ),
                ),
                ("effets_secondaires", models.TextField(blank=True, null=True)),
                ("duree_guerison", models.PositiveIntegerField(blank=True, null=True)),
                ("score_pertinence_diagnostic", models.PositiveIntegerField()),
                ("score_pertinence_prescription", models.PositiveIntegerField()),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("utilise_pour_entrainement", models.BooleanField(default=False)),
                (
                    "feedback_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_data",
                        to="app.prescriptionfeedback",
                    ),
                ),
            ],
            options={
                "verbose_name": "Données d'Apprentissage IA",
                "verbose_name_plural": "Données d'Apprentissage IA",
                "ordering": ["-date_creation"],
            },
        ),
    ]
